#!/usr/bin/env ruby
require 'phantomjs'
require 'watir-webdriver'
require 'hpricot'

Selenium::WebDriver::PhantomJS.path = Phantomjs.path
$b = Watir::Browser.new :phantomjs

def process_args(args)
  if args.size == 1
    from, to, words = ['en','pl', args[0]]
  else
    from, to, words = args
  end
end

def translate(from, to, words)
  # todo: url-encode unicode chars
  $b.goto "http://translate.google.pl/##{from}/#{to}/#{words.sub ' ','%20'}"
end

def post_proc()
  begin
    print_trans_table extract Hpricot $b.table(class: 'gt-baf-table').html
  rescue Watir::Exception::UnknownObjectException
    puts $b.span(id: 'result_box').text
  end
end

def extract(parsed_tab)
  (parsed_tab/'tr').map do |r|
    cells = r/'td/'
    if cells.size == 1  # is head
      (cells/'span/').to_a.unshift :head
    else
      #  td cells are: [is_popular_mark, tN, "back_tN1, back_tN2, .. back_tNM"]
      #  where: tN = Nth translation, back_tNM = M back translations of N
      cells[1..-1].map(&:inner_text).unshift :translations
    end
  end
end

def print_trans_table(tab)
  ts = tab.select{ |r| r[0] == :translations }
  longest_tr  = ts.max_by { |r| r[1].size }
  longest_btr = ts.max_by { |r| r[2].size }
  max_btr_len = longest_btr && longest_btr[2].size
  max_tr_len  = longest_tr && longest_tr[1].size
  space_left  = (`tput cols` || 80).to_i - (max_tr_len + 3 + max_btr_len)
  space_left  = 0 if space_left < 0
  tr_align = max_tr_len + [4, space_left].min
  tab.each do |r|
    if r[0] == :head
      puts r.drop(1).join ' '
    else
      puts "%#{tr_align}s:  %s" % [ r[1], r[2] ]
    end
  end
end

translate(*process_args(ARGV)) and post_proc if $0 == __FILE__ 
